name: build-linux-clear

on:
  workflow_dispatch:
    inputs:
      clear_branch:
        type: string
        required: true
        description: "Clear patch branch"
  
jobs:
  build:
    runs-on: ubuntu-latest
    container: alpine:3.19
    steps:
      - name: Install sdk
        run: |
          apk upgrade
          apk add alpine-sdk sudo
      - name: Checkount aports repository
        uses: actions/checkout@v3  
        with:
          repository: alpinelinux/aports
          ref: 3.18-stable
          path: aports
      - name: Prepare abuild
#          echo "permit nopass :wheel" >> /etc/doas.d/doas.conf      
        run: |
          adduser builder -D -G wheel && echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          addgroup builder abuild
          chown builder -R ..
          chown builder -R /tmp
          mkdir -p /var/cache/distfiles
          chmod a+w /var/cache/distfiles
          chgrp abuild /var/cache/distfiles
          chmod g+w /var/cache/distfiles
          su builder -c "abuild-keygen -a -i -n"
          apk add bash git
      - name: Move repo directory
        run: |
           mv aports/community/linux-edge /home/builder
           cd /home/builder
           chown builder -R /home/builder
           cd /home/builder/linux-edge
           mv config-edge.x86_64 config-clear.x86_64
           sed -i -e '/unset LDFLAGS/i \ \tscripts/config -e CONFIG_MOUSE_PS2_SENTELIC' APKBUILD
           sed -i -e '/unset LDFLAGS/i \ \tscripts/config -e CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL' APKBUILD
           sed -i -e '/unset LDFLAGS/i \ \tscripts/config -d CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE' APKBUILD
           sed -i -e '/unset LDFLAGS/i \ \tscripts/config -e CONFIG_CPU_FREQ_GOV_CONSERVATIVE' APKBUILD
           sed -i -e '/unset LDFLAGS/i \ \tscripts/config -e CONFIG_CPU_FREQ_GOV_SCHEDUTIL' APKBUILD
           sed -i -e 's/_flavor=edge/_flavor=clear/g' APKBUILD
           sed -i -e 's/-config-edge/-config-clear/g' APKBUILD
           sed -i -e 's/config-edge.x86_64/config-clear.x86_64/g' APKBUILD
           sed -i -e 's/_package edge/_package clear/g' APKBUILD
           sed -i -e 's/linux-edge/linux-clear/g' APKBUILD
           git clone -b ${{ github.event.inputs.clear_branch }} https://github.com/clearlinux-pkgs/linux.git linux-clear
           sed -i -e '/# first apply patches in specified order/i \ \tfor i in $(grep '^Patch' ../../linux-clear/linux.spec |\\' APKBUILD
           sed -i -e "/# first apply patches in specified order/i \ \t\ grep -Ev '^Patch0132|^Patch0118|^Patch0113|^Patch0138|^Patch0139' | sed -n 's/.*: //p'); do" APKBUILD
           sed -i -e '/# first apply patches in specified order/i \ \t\techo "Applying patch ${i}..."' APKBUILD
           sed -i -e '/# first apply patches in specified order/i \ \t\tpatch -Np1 -i "../../linux-clear/${i}"' APKBUILD
           sed -i -e '/# first apply patches in specified order/i \ \tdone' APKBUILD
#           curl -LO https://cdn.kernel.org/pub/linux/kernel/v6.x/patch-6.5.8.xz
#           export NEW=$(sha512sum patch-6.5.8.xz)
#           curl -LO https://cdn.kernel.org/pub/linux/kernel/v6.x/patch-6.5.7.xz
#           export OLD=$(sha512sum patch-6.5.7.xz)
#           sed -i 's/6.5.7/6.5.8/g' APKBUILD
#           sed -i 's/${OLD}/${NEW}/g' APKBUILD
#           export OLD=$(sha512sum config-clear.x86_64)
#           curl -L https://raw.githubusercontent.com/clearlinux-pkgs/linux/${CLEAR_BRANCH}/config -o config-clear.x86_64
#           export NEW=$(sha512sum config-clear.x86_64)
#           sed -i 's/${OLD}/${NEW}/g' APKBUILD
#           curl -LO https://raw.githubusercontent.com/Frogging-Family/linux-tkg/master/linux-tkg-patches/6.5/0002-clear-patches.patch
#           sed -i -e '/# first apply patches in specified order/i \ \tpatch -Np1 -i ../../0002-clear-patches.patch' APKBUILD
#        env:
#          CLEAR_BRANCH: ${{ clear_branch }}
      - name: Install packages
        run: |
           cd /home/builder/linux-edge
           su builder -c "abuild checksum"
           su builder -c "abuild deps"                
      - name: Build apk
        run: |
           cd /home/builder/linux-edge
           su builder -c "abuild"        
           cp $(find /home/builder -name linux-clear*.apk) /tmp
      - uses: actions/upload-artifact@v3
        with:
          name: linux-clear
          path: /tmp/*.apk
