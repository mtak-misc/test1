diff -uNr a/common/inc/nv-mm.h b/common/inc/nv-mm.h
--- a/common/inc/nv-mm.h	2022-10-12 04:30:26.000000000 -0500
+++ b/common/inc/nv-mm.h	2023-08-29 23:15:03.330609288 -0500
@@ -31,14 +31,14 @@
 
 /* get_user_pages
  *
- * The 8-argument version of get_user_pages was deprecated by commit 
- * (2016 Feb 12: cde70140fed8429acf7a14e2e2cbd3e329036653)for the non-remote case 
+ * The 8-argument version of get_user_pages was deprecated by commit
+ * (2016 Feb 12: cde70140fed8429acf7a14e2e2cbd3e329036653)for the non-remote case
  * (calling get_user_pages with current and current->mm).
  *
  * Completely moved to the 6 argument version of get_user_pages -
  * 2016 Apr 4: c12d2da56d0e07d230968ee2305aaa86b93a6832
  *
- * write and force parameters were replaced with gup_flags by - 
+ * write and force parameters were replaced with gup_flags by -
  * 2016 Oct 12: 768ae309a96103ed02eb1e111e838c87854d8b51
  *
  * A 7-argument version of get_user_pages was introduced into linux-4.4.y by
@@ -77,24 +77,44 @@
     #if defined(NV_GET_USER_PAGES_HAS_WRITE_AND_FORCE_ARGS)
         #define NV_GET_USER_PAGES get_user_pages
     #else
-        #include <linux/mm.h>
-
-        static inline long NV_GET_USER_PAGES(unsigned long start,
-                                             unsigned long nr_pages,
-                                             int write,
-                                             int force,
-                                             struct page **pages,
-                                             struct vm_area_struct **vmas)
-        {
-            unsigned int flags = 0;
-
-            if (write)
-                flags |= FOLL_WRITE;
-            if (force)
-                flags |= FOLL_FORCE;
+        #if defined(NV_GET_USER_PAGES_DROPPED_VMA)
+              #include <linux/mm.h>
 
-            return get_user_pages(start, nr_pages, flags, pages, vmas);
-        }
+              static inline long NV_GET_USER_PAGES(unsigned long start,
+                                                   unsigned long nr_pages,
+                                                   int write,
+                                                   int force,
+                                                   struct page **pages)
+              {
+                  unsigned int flags = 0;
+
+                  if (write)
+                      flags |= FOLL_WRITE;
+                  if (force)
+                      flags |= FOLL_FORCE;
+
+                  return get_user_pages(start, nr_pages, flags, pages);
+              }
+        #else
+              #include <linux/mm.h>
+
+              static inline long NV_GET_USER_PAGES(unsigned long start,
+                                                   unsigned long nr_pages,
+                                                   int write,
+                                                   int force,
+                                                   struct page **pages,
+                                                   struct vm_area_struct **vmas)
+              {
+                  unsigned int flags = 0;
+
+                  if (write)
+                      flags |= FOLL_WRITE;
+                  if (force)
+                      flags |= FOLL_FORCE;
+
+                  return get_user_pages(start, nr_pages, flags, pages, vmas);
+              }
+        #endif
     #endif
 #endif
 
diff -uNr a/conftest.sh b/conftest.sh
--- a/conftest.sh	2023-07-03 00:29:33.476927152 -0500
+++ b/conftest.sh	2023-08-29 22:49:00.991916583 -0500
@@ -493,7 +493,7 @@
             # locate a migration source -fix") in linux-next tree
             #
             CODE="
-            #include <linux/list.h> 
+            #include <linux/list.h>
             void conftest_list_is_first(void) {
                 list_is_first();
             }"
@@ -703,7 +703,7 @@
             fi
 
             echo "$CONFTEST_PREAMBLE
-            #include <linux/pm.h>  
+            #include <linux/pm.h>
             int conftest_pm_message_t(void) {
                 return offsetof(pm_message_t, event);
             }" > conftest$$.c
@@ -874,7 +874,7 @@
 
         acpi_device_id)
             #
-            # Determine if the 'acpi_device_id' structure has 
+            # Determine if the 'acpi_device_id' structure has
             # a 'driver_data' member.
             #
             CODE="
@@ -1085,7 +1085,7 @@
         register_cpu_notifier)
             #
             # Determine if register_cpu_notifier() is present
-            # 
+            #
             # register_cpu_notifier() was removed by the following commit
             #   2016 Dec 25: b272f732f888d4cf43c943a40c9aaa836f9b7431
             #
@@ -1100,10 +1100,10 @@
         cpuhp_setup_state)
             #
             # Determine if cpuhp_setup_state() is present
-            # 
+            #
             # cpuhp_setup_state() was added by the following commit
-            #   2016 Feb 26: 5b7aa87e0482be768486e0c2277aa4122487eb9d 
-            # 
+            #   2016 Feb 26: 5b7aa87e0482be768486e0c2277aa4122487eb9d
+            #
             # It is used as a replacement for register_cpu_notifier
             CODE="
             #include <linux/cpu.h>
@@ -1260,7 +1260,7 @@
 
         proc_dir_entry)
             #
-            # Determine if the 'proc_dir_entry' structure has 
+            # Determine if the 'proc_dir_entry' structure has
             # an 'owner' member.
             #
             CODE="
@@ -1456,7 +1456,7 @@
                 echo "#undef NV_SG_ALLOC_TABLE_FROM_PAGES_PRESENT" | append_conftest "functions"
                 return
             fi
-            
+
             rm -f conftest$$.o
 
             CODE="
@@ -1484,7 +1484,7 @@
             #
             echo "$CONFTEST_PREAMBLE
             #if defined(NV_LINUX_EFI_H_PRESENT)
-            #include <linux/efi.h> 
+            #include <linux/efi.h>
             #endif
             int conftest_efi_enabled(void) {
                 return efi_enabled();
@@ -1502,7 +1502,7 @@
 
             echo "$CONFTEST_PREAMBLE
             #if defined(NV_LINUX_EFI_H_PRESENT)
-            #include <linux/efi.h> 
+            #include <linux/efi.h>
             #endif
             int conftest_efi_enabled(void) {
                 return efi_enabled(0);
@@ -1693,7 +1693,7 @@
             "
 
             compile_check_conftest "$CODE" "NV_MDEV_PARENT_OPS_STRUCT_PRESENT" "" "types"
-        ;; 
+        ;;
 
         mdev_parent_dev)
             #
@@ -1799,7 +1799,7 @@
             #
             # The commit c28198889c15 removed the function
             # 'PDE_DATA()', and replaced it with 'pde_data()'
-            # ("proc: remove PDE_DATA() completely") in v5.17-rc1. 
+            # ("proc: remove PDE_DATA() completely") in v5.17-rc1.
             #
             CODE="
             #include <linux/proc_fs.h>
@@ -2023,7 +2023,7 @@
 
             compile_check_conftest "$CODE" "NV_PM_VT_SWITCH_REQUIRED_PRESENT" "" "functions"
         ;;
-        
+
         list_cut_position)
             #
             # Determine if the list_cut_position() function is present.
@@ -2067,7 +2067,7 @@
             }"
 
             compile_check_conftest "$CODE" "NV_XEN_IOEMU_INJECT_MSI" "" "functions"
-        ;; 
+        ;;
 
         phys_to_dma)
             #
@@ -2134,7 +2134,7 @@
 
             compile_check_conftest "$CODE" "NV_DMA_MAP_OPS_PRESENT" "" "types"
         ;;
- 
+
         get_dma_ops)
             #
             # Determine if the get_dma_ops() function is present.
@@ -2983,7 +2983,7 @@
                 return
             fi
         ;;
-        get_user_pages)     
+        get_user_pages)
             #
             # Conftest for get_user_pages()
             #
@@ -3018,14 +3018,14 @@
             }" > conftest$$.c
 
             $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c    
+            rm -f conftest$$.c
             if [ -f conftest$$.o ]; then
                 echo "#define NV_GET_USER_PAGES_HAS_WRITE_AND_FORCE_ARGS" | append_conftest "functions"
                 echo "#undef NV_GET_USER_PAGES_HAS_TASK_STRUCT" | append_conftest "functions"
                 rm -f conftest$$.o
                 return
             fi
-            
+
             # Conftest #2: Check if get_user_pages has gup_flags instead of
             # write and force parameters. And that gup doesn't accept a
             # task_struct and mm_struct as its first arguments.
@@ -3056,7 +3056,6 @@
             # write and force parameters AND that gup has task_struct and
             # mm_struct as its first arguments.
             # Return if available.
-            # Fall through to default case if absent.
 
             echo "$CONFTEST_PREAMBLE
             #include <linux/mm.h>
@@ -3080,6 +3079,31 @@
                 return
             fi
 
+            # Conftest #4: check if vma arg was dropped
+            # Return if available.
+            # Fall through to default case if absent.
+
+            echo "$CONFTEST_PREAMBLE
+            #include <linux/mm.h>
+            long get_user_pages(unsigned long start,
+                                unsigned long nr_pages,
+                                unsigned int gup_flags,
+                                struct page **pages) {
+                return 0;
+            }" > conftest$$.c
+
+            $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
+            rm -f conftest$$.c
+
+            if [ -f conftest$$.o ]; then
+                echo "#define NV_GET_USER_PAGES_DROPPED_VMA" | append_conftest "functions"
+                echo "#undef NV_GET_USER_PAGES_HAS_WRITE_AND_FORCE_ARGS" | append_conftest "functions"
+                echo "#undef NV_GET_USER_PAGES_HAS_TASK_STRUCT" | append_conftest "functions"
+                  rm -f conftest$$.o
+                return
+            fi
+
+
             echo "#define NV_GET_USER_PAGES_HAS_WRITE_AND_FORCE_ARGS" | append_conftest "functions"
             echo "#define NV_GET_USER_PAGES_HAS_TASK_STRUCT" | append_conftest "functions"
 
@@ -4107,7 +4131,7 @@
             #
             # Determine if the 'struct proc_ops' type is present.
             #
-            # Added by commit d56c0d45f0e2 ("proc: decouple proc from VFS with 
+            # Added by commit d56c0d45f0e2 ("proc: decouple proc from VFS with
             # "struct proc_ops"") in 5.6-rc1
             #
             CODE="
@@ -4123,7 +4147,7 @@
             #
             # Determine if the 'struct timeval' type is present.
             #
-            # Removed by commit c766d1472c70 ("y2038: hide 
+            # Removed by commit c766d1472c70 ("y2038: hide
             # timeval/timespec/itimerval/itimerspec types") in 5.6-rc3
             # (2020-02-20).
             #
@@ -4795,7 +4819,7 @@
         RET=1
         DIRS="generated linux"
         FILE=""
-        
+
         for DIR in $DIRS; do
             if [ -f $HEADERS/$DIR/utsrelease.h ]; then
                 FILE="$HEADERS/$DIR/utsrelease.h"
diff -uNr a/nvidia/os-mlock.c b/nvidia/os-mlock.c
--- a/nvidia/os-mlock.c	2022-10-12 04:30:26.000000000 -0500
+++ b/nvidia/os-mlock.c	2023-08-29 22:58:37.460094450 -0500
@@ -127,8 +127,13 @@
     }
 
     nv_mmap_read_lock(mm);
+#if defined(NV_GET_USER_PAGES_DROPPED_VMA)
+    ret = NV_GET_USER_PAGES((unsigned long)address,
+                            page_count, write, force, user_pages);
+#else
     ret = NV_GET_USER_PAGES((unsigned long)address,
                             page_count, write, force, user_pages, NULL);
+#endif
     nv_mmap_read_unlock(mm);
     pinned = ret;
 
diff -uNr a/nvidia-drm/nvidia-drm-linux.c b/nvidia-drm/nvidia-drm-linux.c
--- a/nvidia-drm/nvidia-drm-linux.c	2022-10-12 04:30:31.000000000 -0500
+++ b/nvidia-drm/nvidia-drm-linux.c	2023-08-29 22:52:59.712273031 -0500
@@ -115,8 +115,13 @@
 
     nv_mmap_read_lock(mm);
 
+#if defined(NV_GET_USER_PAGES_DROPPED_VMA)
+    pages_pinned = NV_GET_USER_PAGES(address, pages_count, write, force,
+		                     user_pages);
+#else
     pages_pinned = NV_GET_USER_PAGES(address, pages_count, write, force,
                                      user_pages, NULL);
+#endif
     nv_mmap_read_unlock(mm);
 
     if (pages_pinned < 0 || (unsigned)pages_pinned < pages_count) {
diff -uNr a/nvidia-uvm/uvm8_tools.c b/nvidia-uvm/uvm8_tools.c
--- a/nvidia-uvm/uvm8_tools.c	2022-10-12 04:30:28.000000000 -0500
+++ b/nvidia-uvm/uvm8_tools.c	2023-08-29 22:55:54.618394874 -0500
@@ -251,13 +251,37 @@
     }
 
     nv_mmap_read_lock(current->mm);
+#if defined(NV_GET_USER_PAGES_DROPPED_VMA)
+    ret = NV_GET_USER_PAGES(user_va, num_pages, 1, 0, *pages);
+#else
     ret = NV_GET_USER_PAGES(user_va, num_pages, 1, 0, *pages, vmas);
+#endif
     nv_mmap_read_unlock(current->mm);
     if (ret != num_pages) {
         status = NV_ERR_INVALID_ARGUMENT;
         goto fail;
     }
 
+#if defined(NV_GET_USER_PAGES_DROPPED_VMA)
+    struct vm_area_struct *vma;
+    unsigned long start;
+
+    nv_mmap_read_lock(current->mm);
+    start = user_va;
+    for (i = 0; i < num_pages; i++) {
+        vma = find_vma(current->mm, start);
+        if (!vma) {
+	    nv_mmap_read_unlock(current->mm);
+	    status = NV_ERR_INVALID_ARGUMENT;
+	    goto fail;
+	}
+
+        vmas[i] = vma;
+        start = (start + PAGE_SIZE) & PAGE_MASK;
+    }
+    nv_mmap_read_unlock(current->mm);
+#endif
+
     for (i = 0; i < num_pages; i++) {
         if (page_count((*pages)[i]) > MAX_PAGE_COUNT || uvm_file_is_nvidia_uvm(vmas[i]->vm_file)) {
             status = NV_ERR_INVALID_ARGUMENT;
